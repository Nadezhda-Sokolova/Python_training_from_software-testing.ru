{"name": "test_group_list", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "app = <fixture.application.Application object at 0x1112f7280>, db = <fixture.db.DBFixture object at 0x1112f7520>\n\n    def test_group_list(app, db):\n        print(timeit(lambda:app.group.get_group_list(), number=1))\n        def clean(group):\n            return Group(id=group.id, name=group.name.strip())\n        print (timeit(lambda: map (clean, db.get_group_list()), number = 1000))\n>       assert False #sorted(ui_list, key=Group.id_or_max) == sorted(db_list, key=Group.id_or_max)\nE       assert False\n\ntest/test_db_matches_ui.py:9: AssertionError"}, "attachments": [{"name": "stdout", "source": "35d8a9a3-2f26-4250-bf8a-a3359f29a537-attachment.txt", "type": "text/plain"}], "start": 1581445792339, "stop": 1581445795812, "uuid": "c3ddeabc-b2af-4d47-9104-c5a6796290ae", "historyId": "f17f29013de8c74eab7a07b09922dc90", "testCaseId": "d4b447882ae6fe5227f61499ba550360", "fullName": "test.test_db_matches_ui#test_group_list", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_db_matches_ui"}, {"name": "host", "value": "MBP-Nadezda.Dlink"}, {"name": "thread", "value": "4220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_db_matches_ui"}]}